// "use client"
// import OpenAI from "openai"
// import Navbar from "../components/Navbar"
// import { useState, useCallback, useEffect } from "react"
// import debounce from 'lodash.debounce'

// const openai = new OpenAI({
//   apiKey: process.env.NEXT_PUBLIC_OPENAI_API_KEY,
//   dangerouslyAllowBrowser: true,
// });

// const MAX_REQUESTS = 5; // Maximum requests allowed
// const TIME_WINDOW = 60 * 1000; // Time window in milliseconds (1 minute)
// let requestCount = 0;

// function ChatBot() {
//   const [userInput, setUserInput] = useState('') 
//   const [chatHistory, setChatHistory] = useState([]);
//   const [isLoading, setIsLoading] = useState(false);
//   const [errorMessage, setErrorMessage] = useState('');

//   // Debounced API request
//   const handleUserInput = useCallback(
//     debounce(async () => {
//       if (!userInput.trim()) return; // Prevent empty input requests
      
//       // Check local storage for cached response
//       const cachedResponse = localStorage.getItem(userInput);
//       if (cachedResponse) {
//         setChatHistory((prevChat) => [
//           ...prevChat, { role: "assistant", content: cachedResponse },
//         ]);
//         return;
//       }

//       // Client-side rate limiting
//       if (requestCount >= MAX_REQUESTS) {
//         setErrorMessage('You have reached the maximum request limit. Please wait and try again.');
//         return;
//       }

//       requestCount++;
//       setTimeout(() => {
//         requestCount--;
//       }, TIME_WINDOW);

//       setIsLoading(true);
//       setChatHistory((prevChat) => [
//         ...prevChat, { role: "user", content: userInput },
//       ]);
      
//       try {
//         const chatCompletion = await openai.chat.completions.create({
//           messages: [...chatHistory, { role: 'user', content: userInput }],
//           model: "gpt-3.5-turbo",
//         });

//         const assistantResponse = chatCompletion.choices[0].message.content;
        
//         // Update chat history with assistant's response
//         setChatHistory((prevChat) => [
//           ...prevChat, { role: 'assistant', content: assistantResponse },
//         ]);

//         // Cache the response in localStorage
//         localStorage.setItem(userInput, assistantResponse);
        
//       } catch (error) {
//         if (error.status === 429) {
//           setErrorMessage('You are making too many requests. Please wait and try again later.');
//         } else {
//           console.error('Error fetching completion:', error);
//           setErrorMessage('An error occurred. Please try again.');
//         }
//       } finally {
//         setUserInput('');
//         setIsLoading(false);
//       }
//     }, 500), // Debouncing with a 500ms delay
//     [userInput, chatHistory]
//   );

//   const handleInputChange = (e) => {
//     setUserInput(e.target.value);
//     setErrorMessage(''); // Clear any error message when the user starts typing
//     handleUserInput();
//   };

//   return (
//     <div>
//       <Navbar />
//       <div>
//         <h2>ChatBot</h2>
//       </div>
//       <div>
//         {chatHistory.map((message, index) => (
//           <div key={index} className={`${message.role === 'user' ? 'text-left' : 'text-right'}`}>
//             <div className={`rounded-full p-2 max-w-md mx-4 inline-block ${message.role === 'user' ? 'bg-blue-300 text-blue-800' : 'bg-green-300 text-green-800'}`}>
//               {message.role === 'user' ? 'H' : 'A'}
//             </div>
//             <div className={`max-w-md mx-4 my-2 inline-block ${message.role === 'user' ? 'bg-blue-100 text-blue-800' : 'bg-green-300 text-green-800'} p-2 rounded-md`}>
//               {message.content}
//             </div>
//           </div>
//         ))}
//       </div>

//       {errorMessage && (
//         <div className="error-message text-red-500">
//           {errorMessage}
//         </div>
//       )}

//       <div>
//         <input
//           type="text"
//           placeholder="Type a message"
//           value={userInput}
//           onChange={handleInputChange}
//         />
//         {isLoading ? (
//           <div>Loading...</div>
//         ) : (
//           <button onClick={handleUserInput}>Send</button>
//         )}
//       </div>
//     </div>
//   );
// }

// export default ChatBot;

// const markers = [
//     { id: 1, geocode: [10.5231, 7.4403], popUp: "Kaduna Central Police Station" },
   
//   ];

// service_vuy3l4e
// template id: template_mz5zrpt
